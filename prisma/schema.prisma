// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  name             String   @db.VarChar(100)
  email            String   @unique
  password         String   @db.VarChar(100)
  address          String   @db.VarChar(255)
  phoneIntWhatsapp String   @db.VarChar(15)
  phoneIntContact  String   @db.VarChar(15)
  isPremium        Boolean?
  isMitra          Boolean
  images           Image?

  @@map("users")
}

model Mitra {
  id               String   @id @default(uuid())
  name             String   @db.VarChar(100)
  email            String   @unique
  password         String
  address          String
  phoneIntWhatsapp String   @db.VarChar(15)
  phoneIntContact  String   @db.VarChar(15)
  category         String
  description      String
  isPremium        Boolean?
  isMitra          Boolean
  post             Post[]
  images           Image[]

  @@map("mitras")
}

model Post {
  id               String  @id @default(uuid())
  title            String
  category         String
  description      String
  priceMin         String
  priceMax         String
  location         String
  isLiked          Boolean?
  phoneIntWhatsapp String  @db.VarChar(15)
  phoneIntContact  String  @db.VarChar(15)
  mitra            Mitra  @relation(fields: [mitraId], references: [id])
  mitraId          String
  images           Image[]

  @@map("posts")
}

model Image {
  id      String  @id @default(uuid())
  userId  String? @unique
  user    User?   @relation(fields: [userId], references: [id])
  mitraId String?
  mitra   Mitra?  @relation(fields: [mitraId], references: [id])
  postId  String?
  post    Post?   @relation(fields: [postId], references: [id])
  url     String?
}

// model Post {
//   id                    Int      @id @default(autoincrement())
//   createdAt             DateTime @default(now())
//   updatedAt             DateTime @updatedAt
//   title                 String   @db.VarChar(255)
//   description           String?  @db.VarChar(1000)
//   price_min             String
//   price_max             String
//   location              String
//   phone_number_whatsapp String
//   phone_number_contact  String?
//   // category              Category @relation
//   subtitle              String?
//   image                 Image[]
//   authorId              Int
//   //author                User     @relation(fields: [authorId], references: [id])
// }

// // model Category {
// //   id            Int    @id @default(autoincrement())
// //   category_name String
// // }

// model Image {
//   id     Int    @id @default(autoincrement())
//   name   String
//   postId Int?
//   posts  Post?  @relation(fields: [postId], references: [id])
//   userId Int?   @unique
//   //user   User?  @relation(fields: [userId], references: [id])
// }
